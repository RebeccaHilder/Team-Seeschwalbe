#### Gamma Plot erstellen ####
#Manueller Vergleich
Gamma_tts3
Gamma3

#betas definieren
beta0_tts <- mod_tts3$estimate[10:12]
beta1_tts <- mod_tts3$estimate[13:15]
beta0_tts
beta1_tts

# changing prob 1 to 1 
Gamma11 <- rep(NA,1000)
tts.seq <- seq(0,1, length = 1000)
for (k in 1:1000) {
  eta <- beta0_slick + beta1_slick*tts.seq[k]
  Gamma.tts3 <- diag(3)
  Gamma.tts3[!Gamma.tts3] <- exp(eta) 
  Gamma.tts3 <- Gamma.tts3/rowSums(Gamma.tts3)
  Gamma11[k] <- Gamma.tts3[1,1]
}
# changing prob 2 to 2
Gamma22 <- rep(NA,1000)
tts.seq <- seq(0,1, length = 1000)
for (k in 1:1000) {
  eta <- beta0_slick + beta1_slick*tts.seq[k]
  Gamma.tts3 <- diag(3)
  Gamma.tts3[!Gamma.tts3] <- exp(eta) 
  Gamma.tts3 <- Gamma.tts3/rowSums(Gamma.tts3)
  Gamma22[k] <- Gamma.tts3[2,2]
}
# changing prob 3 to 3
Gamma33 <- rep(NA,1000)
tts.seq <- seq(0,1, length = 1000)
for (k in 1:1000) {
  eta <- beta0_slick + beta1_slick*tts.seq[k]
  Gamma.tts3 <- diag(3)
  Gamma.tts3[!Gamma.tts3] <- exp(eta) 
  Gamma.tts3 <- Gamma.tts3/rowSums(Gamma.tts3)
  Gamma33[k] <- Gamma.tts3[3,3]
}
# changing prob 1 to 2 
Gamma12 <- rep(NA,1000)
tts.seq <- seq(0,1, length = 1000)
for (k in 1:1000) {
  eta <- beta0_slick + beta1_slick*tts.seq[k]
  Gamma.tts3 <- diag(3)
  Gamma.tts3[!Gamma.tts3] <- exp(eta) 
  Gamma.tts3 <- Gamma.tts3/rowSums(Gamma.tts3)
  Gamma12[k] <- Gamma.tts3[1,2]
}
# changing prob 1 to 3
Gamma13 <- rep(NA,1000)
tts.seq <- seq(0,1, length = 1000)
for (k in 1:1000) {
  eta <- beta0_slick + beta1_slick*tts.seq[k]
  Gamma.tts3 <- diag(3)
  Gamma.tts3[!Gamma.tts3] <- exp(eta) 
  Gamma.tts3 <- Gamma.tts3/rowSums(Gamma.tts3)
  Gamma13[k] <- Gamma.tts3[1,3]
}
# changing prob 2 to 1 
Gamma21 <- rep(NA,1000)
tts.seq <- seq(0,1, length = 1000)
for (k in 1:1000) {
  eta <- beta0_slick + beta1_slick*tts.seq[k]
  Gamma.tts3 <- diag(3)
  Gamma.tts3[!Gamma.tts3] <- exp(eta) 
  Gamma.tts3 <- Gamma.tts3/rowSums(Gamma.tts3)
  Gamma21[k] <- Gamma.tts3[2,1]
}
# changing prob 2 to 3 
Gamma23 <- rep(NA,1000)
slick.seq <- seq(0,1, length = 1000)
tts.seq <- seq(0,1, length = 1000)
for (k in 1:1000) {
  eta <- beta0_slick + beta1_slick*tts.seq[k]
  Gamma.tts3 <- diag(3)
  Gamma.tts3[!Gamma.tts3] <- exp(eta) 
  Gamma.tts3 <- Gamma.tts3/rowSums(Gamma.tts3)
  Gamma23[k] <- Gamma.tts3[2,3]
}
# changing prob 3 to 1 
Gamma31 <- rep(NA,1000)
tts.seq <- seq(0,1, length = 1000)
for (k in 1:1000) {
  eta <- beta0_slick + beta1_slick*tts.seq[k]
  Gamma.tts3 <- diag(3)
  Gamma.tts3[!Gamma.tts3] <- exp(eta) 
  Gamma.tts3 <- Gamma.tts3/rowSums(Gamma.tts3)
  Gamma31[k] <- Gamma.tts3[3,1]
}
# changing prob 3 to 2 
Gamma32 <- rep(NA,1000)
tts.seq <- seq(0,1, length = 1000)
for (k in 1:1000) {
  eta <- beta0_slick + beta1_slick*tts.seq[k]
  Gamma.tts3 <- diag(3)
  Gamma.tts3[!Gamma.tts3] <- exp(eta) 
  Gamma.tts3 <- Gamma.tts3/rowSums(Gamma.tts3)
  Gamma32[k] <- Gamma.tts3[3,2]
}

# graphical illustration
par(mfrow = c(3,3))
plot(Gamma11 ~ tts.seq, main = "Gamma11", ylab = "P(1->1)", xlab = "tts", ylim = c(0.95,1), 
     type="l", lwd=5)
plot(Gamma12 ~ tts.seq, main = "Gamma12", ylab = "P(1->2)", xlab = "tts", ylim = c(0,0.05), 
     type="l", lwd=5)
plot(Gamma13 ~ tts.seq, main = "Gamma13", ylab = "P(1->3)", xlab = "tts", ylim = c(0,0.05), 
     type="l", lwd=5)
plot(Gamma21 ~ tts.seq, main = "Gamma21", ylab = "P(2->1)", xlab = "tts", ylim = c(0,0.05), 
     type="l", lwd=5)
plot(Gamma22 ~ tts.seq, main = "Gamma22", ylab = "P(2->2)", xlab = "tts", ylim = c(0.95,1), 
     type="l", lwd=5)
plot(Gamma23 ~ tts.seq, main = "Gamma23", ylab = "P(2->3)", xlab = "tts", ylim = c(0,0.05), 
     type="l", lwd=5)
plot(Gamma31 ~ tts.seq, main = "Gamma31", ylab = "P(3->1)", xlab = "tts", ylim = c(0,0.05), 
     type="l", lwd=5)
plot(Gamma32 ~ tts.seq, main = "Gamma32", ylab = "P(3->2)", xlab = "tts", ylim = c(0,0.05), 
     type="l", lwd=5)
plot(Gamma33 ~ tts.seq, main = "Gamma33", ylab = "P(3->3)", xlab = "tts", ylim = c(0.95,1), 
     type="l", lwd=5)
par(mfrow = c(1,1))
